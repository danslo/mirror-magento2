on:
  push:
    branches:
      - '**'

env:
  WARDEN_ENV_NAME: 'magento2'
  WARDEN_ENV_TYPE: 'magento2'
  WARDEN_WEB_ROOT: '/'
  TRAEFIK_DOMAIN: 'magento2.test'
  TRAEFIK_SUBDOMAIN: 'app'
  WARDEN_DB: '1'
  WARDEN_ELASTICSEARCH: '1'
  WARDEN_VARNISH: '1'
  WARDEN_RABBITMQ: '1'
  WARDEN_REDIS: '1'
  ELASTICSEARCH_VERSION: '7.17'
  MARIADB_VERSION: '10.4'
  NODE_VERSION: '12'
  COMPOSER_VERSION: '2'
  PHP_VERSION: '8.1'
  PHP_XDEBUG_3: '1'
  RABBITMQ_VERSION: '3.9'
  REDIS_VERSION: '6.2'
  VARNISH_VERSION: '7.0'
  TTY_SHELL: 'script -q -e -c "bash {0}"'

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Magento
        uses: actions/checkout@v3
        with:
          path: magento2

      - name: Checkout Warden
        uses: actions/checkout@v3
        with:
          repository: davidalger/warden
          ref: master
          path: warden

      - name: Checkout Cypress Testing Suite
        uses: actions/checkout@v3
        with:
          repository: elgentos/magento2-cypress-testing-suite
          ref: main
          path: cypress-testing-suite

      - name: Checkout Sample Data
        uses: actions/checkout@v3
        with:
          repository: magento/magento2-sample-data
          ref: 2.4-develop # todo, use current branch name
          path: magento2/sample-data

      - name: Install Xvfb
        run: sudo apt-get install xvfb

      - name: Setup Warden
        run: echo "$GITHUB_WORKSPACE/warden/bin" >> $GITHUB_PATH

      - name: Initialize Warden
        run: warden svc up

      - name: Sign Certificate
        run: warden sign-certificate ${TRAEFIK_DOMAIN}

      - name: Initialize Environment
        run: warden env up
        working-directory: magento2

      - name: Add Hosts Entry
        run: echo "127.0.0.1 ${TRAEFIK_SUBDOMAIN}.${TRAEFIK_DOMAIN}" | sudo tee -a /etc/hosts

      - name: Set Permissions
        run: sudo chown -R $(id -u):$(id -g) $GITHUB_WORKSPACE/magento2

      - name: Update User and Group IDs
        shell: $TTY_SHELL
        run: |
          warden env exec php-fpm sudo groupmod -g $(id -g) www-data
          warden env exec php-fpm sudo usermod -u $(id -u) www-data
        working-directory: magento2

      - name: Install Cypress
        shell: $TTY_SHELL
        run: warden env exec php-fpm npm install cypress cypress-file-upload cypress-localstorage-commands cypress-tags typescript --save-dev
        working-directory: magento2

      - name: Composer Install
        shell: $TTY_SHELL
        run: warden env exec php-fpm composer install
        working-directory: magento2

      - name: Install Magento
        shell: $TTY_SHELL
        run: >
          warden env exec php-fpm bin/magento setup:install \
              --backend-frontname=backend \
              --amqp-host=rabbitmq \
              --amqp-port=5672 \
              --amqp-user=guest \
              --amqp-password=guest \
              --db-host=db \
              --db-name=magento \
              --db-user=magento \
              --db-password=magento \
              --search-engine=elasticsearch7 \
              --elasticsearch-host=elasticsearch \
              --elasticsearch-port=9200 \
              --elasticsearch-index-prefix=magento2 \
              --elasticsearch-enable-auth=0 \
              --elasticsearch-timeout=15 \
              --http-cache-hosts=varnish:80 \
              --session-save=redis \
              --session-save-redis-host=redis \
              --session-save-redis-port=6379 \
              --session-save-redis-db=2 \
              --session-save-redis-max-concurrency=20 \
              --cache-backend=redis \
              --cache-backend-redis-server=redis \
              --cache-backend-redis-db=0 \
              --cache-backend-redis-port=6379 \
              --page-cache=redis \
              --page-cache-redis-server=redis \
              --page-cache-redis-db=1 \
              --page-cache-redis-port=6379
        working-directory: magento2

      - name: Install Sample Data
        shell: $TTY_SHELL
        run: warden env exec php-fpm php -f sample-data/dev/tools/build-sample-data.php -- --ce-source="/var/www/html"
        working-directory: magento2

      - name: Setup Upgrade
        shell: $TTY_SHELL
        run: warden env exec php-fpm bin/magento setup:upgrade
        working-directory: magento2

      - name: Update Configuration
        shell: $TTY_SHELL
        run: |
          warden env exec php-fpm bin/magento config:set --lock-env web/unsecure/base_url "https://${TRAEFIK_SUBDOMAIN}.${TRAEFIK_DOMAIN}/"
          warden env exec php-fpm bin/magento config:set --lock-env web/secure/base_url "https://${TRAEFIK_SUBDOMAIN}.${TRAEFIK_DOMAIN}/"
          warden env exec php-fpm bin/magento config:set --lock-env web/secure/offloader_header X-Forwarded-Proto
          warden env exec php-fpm bin/magento config:set --lock-env web/secure/use_in_frontend 1
          warden env exec php-fpm bin/magento config:set --lock-env web/secure/use_in_adminhtml 1
          warden env exec php-fpm bin/magento config:set --lock-env web/seo/use_rewrites 1
          warden env exec php-fpm bin/magento config:set --lock-env system/full_page_cache/caching_application 2
          warden env exec php-fpm bin/magento config:set --lock-env system/full_page_cache/ttl 604800
          warden env exec php-fpm bin/magento config:set --lock-env catalog/search/enable_eav_indexer 1
          warden env exec php-fpm bin/magento config:set --lock-env dev/static/sign 0
        working-directory: magento2

      - name: Reindex
        shell: $TTY_SHELL
        run: warden env exec php-fpm bin/magento indexer:reindex
        working-directory: magento2

      - name: Create Admin User
        shell: $TTY_SHELL
        run: >
          warden env exec php-fpm n98-magerun admin:user:create \
            --admin-user=john \
            --admin-firstname=John \
            --admin-lastname=Doe \
            --admin-password=JohnDoe123 \
            --admin-email="john@example.com"
        working-directory: magento2

      - name: Create Integration Token
        id: create_token
        shell: $TTY_SHELL
        run: |
          mv vendor/symfony/console vendor/symfony/console.bak
          rm -rf generated/*
          echo "::set-output name=token::$(warden env exec php-fpm n98-magerun admin:token:create john)"
          mv vendor/symfony/console.bak vendor/symfony/console
        working-directory: magento2

      - name: Copy Cypress Config
        run: |
          ls -la $GITHUB_WORKSPACE
          rm -rf cypress/{fixtures,page-objects,integration}/hyva
          sed -i 's/https:\/\/example.com\//https:\/\/${TRAEFIK_SUBDOMAIN}.${TRAEFIK_DOMAIN}\//g' cypress.config.js
          cp -rf cypress $GITHUB_WORKSPACE/magento2/
          cp cypress.config.js $GITHUB_WORKSPACE/magento2/
        working-directory: cypress-testing-suite

      - name: Run Cypress
        shell: $TTY_SHELL
        run: warden env exec -e "CYPRESS_MAGENTO2_ADMIN_TOKEN=${{ steps.create_token.outputs.token }}" php-fpm npx cypress run
        working-directory: magento2
